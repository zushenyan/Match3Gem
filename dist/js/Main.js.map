{"version":3,"sources":["node_modules/browser-pack/_prelude.js","src/js/AnimationManager.js","src/js/Boot.js","src/js/GameConstants.js","src/js/GameInput.js","src/js/GameScene.js","src/js/GameUtils.js","src/js/Main.js","src/js/TaskManager.js","src/js/m3g/Board.js","src/js/m3g/BoardPatterns.js","src/js/m3g/BoardUtils.js","src/js/m3g/Matrix.js","src/js/m3g/Pattern.js"],"names":[],"mappings":"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","file":"Main.js","sourceRoot":"/source/","sourcesContent":["(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})","export default class AnimationManager {\n\tconstructor(game){\n\t\tthis._spritePool = {};\n\t\tthis._tweenPool = {};\n\t\tthis._game = game;\n\t}\n\n\taddTextSprite(x, y, id, text){\n\t\tlet style = { font: \"32px Arial\", fill: \"#ffffff\", align: \"center\" };\n\t\tlet textSprite = this._game.add.text(x, y, text, style);\n\t\ttextSprite.anchor.set(0.5);\n\t\tthis._spritePool[id] = textSprite;\n\t}\n\n\taddSprite(x, y, spriteName, id){\n\t\tlet sprite = this._game.add.sprite(x, y, spriteName);\n\t\tthis._spritePool[id] = sprite;\n\t}\n\n\tgetSprite(id){\n\t\treturn this._spritePool[id];\n\t}\n\n\tremoveSprite(id){\n\t\tthis._spritePool[id].destroy();\n\t\tdelete this._spritePool[id];\n\t\tdelete this._tweenPool[id];\n\t}\n\n\tisTweening(){\n\t\tlet isTweening = false;\n\t\tfor(let key in this._tweenPool){\n\t\t\tif(this._tweenPool[key].isRunning){\n\t\t\t\tisTweening = true;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\treturn isTweening;\n\t}\n\n\tspriteFallFrom(y, id, speed){\n\t\tlet duration = this._duration(this._spritePool[id], this._spritePool[id].x, y, speed);\n\t\treturn this._tweenPool[id] = this._game.add.tween(this._spritePool[id]).from({y: y}, duration, Phaser.Easing.Linear.None, true);\n\t}\n\n\tspriteFallTo(y, id, speed){\n\t\tlet duration = this._duration(this._spritePool[id], this._spritePool[id].x, y, speed);\n\t\treturn this._tweenPool[id] = this._game.add.tween(this._spritePool[id]).to({y: y}, duration, Phaser.Easing.Linear.None, true);\n\t}\n\n\tspriteSwap(sourceId, targetId){\n\t\tlet sourceX = this._spritePool[sourceId].x;\n\t\tlet sourceY = this._spritePool[sourceId].y;\n\t\tlet targetX = this._spritePool[targetId].x;\n\t\tlet targetY = this._spritePool[targetId].y;\n\t\tlet sourceTween = this._game.add.tween(this._spritePool[sourceId]).to({x: targetX, y: targetY}, 250, Phaser.Easing.Linear.None, true);\n\t\tlet targetTween = this._game.add.tween(this._spritePool[targetId]).to({x: sourceX, y: sourceY}, 250, Phaser.Easing.Linear.None, true);\n\t\tthis._tweenPool[sourceId] = sourceTween;\n\t\tthis._tweenPool[targetId] = targetTween;\n\t\treturn {source: sourceTween, target: targetTween};\n\t}\n\n\tspriteFadeOut(id, duration){\n\t\treturn this._tweenPool[id] = this._game.add.tween(this._spritePool[id]).to({alpha: 0}, duration, Phaser.Easing.Linear.None, true);\n\t}\n\n\t_duration(movingObj, destX, destY, speed){\n\t\tlet point = new Phaser.Point(destX, destY);\n\t\treturn (Phaser.Point.distance(movingObj, point) / speed) * 1000;\n\t}\n}\n","import GameScene from \"./GameScene\";\n\nexport default class Boot{\n\tconstructor(){\n\t\tlet game = new Phaser.Game(256, 256, Phaser.AUTO);\n\t\tgame.state.add(\"GameScene\", new GameScene(game));\n\t\tgame.state.start(\"GameScene\");\n\t}\n}\n","let GameConstants = {\n\tBOARD_WIDTH: 8,\n\tBOARD_HEIGHT: 8,\n\n\tTILE_SIZE: 32,\n};\n\nexport {GameConstants as default};\n","import GameUtils from \"./GameUtils\";\nimport GameConstants from \"./GameConstants\";\n\nexport default class GameInput {\n\tconstructor(game, callback){\n\t\tthis._game = game;\n\n\t\tthis._callback = callback;\n\t\tthis._capture = false\n\t\tthis._firstPosition = null;\n\t}\n\n\tenableInput(){ this._capture = true; }\n\tdisableInput(){ this._capture = false; }\n\n\tlisten(){\n\t\tif(!this._capture){ return; }\n\t\tif(this._game.input.mousePointer.isDown){\n\t\t\tlet newCoord = GameUtils.convertToBoardPosition(this._game.input.x, this._game.input.y, GameConstants.TILE_SIZE);\n\t\t\tif(this._firstPosition === null){\n\t\t\t\tthis._firstPosition = newCoord;\n\t\t\t}\n\t\t\tif(this._firstPosition.x !== newCoord.x || this._firstPosition.y !== newCoord.y){\n\t\t\t\tthis._callback(this._firstPosition, newCoord);\n\t\t\t\tthis._firstPosition = null;\n\t\t\t}\n\t\t}\n\t\telse{\n\t\t\tthis._firstPosition = null;\n\t\t}\n\t}\n}\n","import Board from \"./m3g/Board\";\nimport GameConstants from \"./GameConstants\";\nimport GameUtils from \"./GameUtils\";\nimport GameInput from \"./GameInput\";\nimport AnimationManager from \"./AnimationManager\";\nimport TaskManager from \"./TaskManager\";\n\n// var sampleBoard1 = [\n// \t[1,2,3,4,5,6,7,8],\n// \t[8,7,6,5,4,3,2,1],\n// \t[1,2,3,4,5,6,7,8],\n// \t[8,7,6,5,4,3,2,1],\n// \t[1,8,3,4,5,6,7,8],\n// \t[8,7,6,5,4,3,2,1],\n// \t[1,2,3,4,5,6,7,8],\n// \t[8,7,6,5,4,3,2,1]\n// ];\n//\n// var sampleBoard2 = [\n// \t[8,2,3,4,5,6,7,8],\n// \t[8,7,6,2,1,3,2,1],\n// \t[6,2,3,4,5,6,7,8],\n// \t[8,7,6,5,1,3,2,1],\n// \t[1,2,3,4,2,6,7,8],\n// \t[8,7,6,5,1,3,2,1],\n// \t[1,2,3,4,2,6,7,8],\n// \t[8,7,6,5,4,3,2,1]\n// ];\n\nexport default class GameScene{\n\tconstructor(game){\n\t\tthis.game = game;\n\t\tthis.board = new Board();\n\t\tthis.gameInput = new GameInput(this.game, this._inputCallback.bind(this));\n\t\tthis.animationManager = new AnimationManager(this.game);\n\t\tthis.taskManager = new TaskManager();\n\n\t\tthis.soundFall = null;\n\t\tthis.soundMatch = null;\n\t}\n\n\tpreload(){\n\t\tfor(let i = 0, j = i + 1; i < Board.TYPES.length; i++, j++){\n\t\t\tthis.game.load.image(\"gem\" + j, \"../media/\" + j + \".png\");\n\t\t}\n\t\tthis.game.load.audio(\"sound_fall\", [\"../media/gem_fall.wav\", \"../media/gem_fall.mp3\"]);\n\t\tthis.game.load.audio(\"sound_match\", [\"../media/gem_matched.wav\", \"../media/gem_matched.mp3\"]);\n\t}\n\n\tcreate(){\n\t\tthis.soundFall = this.game.add.audio(\"sound_fall\");\n\t\tthis.soundMatch = this.game.add.audio(\"sound_match\");\n\t\tthis.soundFall.volume = 0.1;\n\t\tthis.soundMatch.volume = 0.1;\n\n\t\tthis._newBoard();\n\t}\n\n\tupdate(){\n\t\tif(!this.animationManager.isTweening()){ this.taskManager.runTasks() };\n\t\tthis.gameInput.listen();\n\t}\n\n\t_inputCallback(oldCoord, newCoord){\n\t\tthis._swap(oldCoord, newCoord);\n\t}\n\n\t_swap(oldCoord, newCoord){\n\t\tthis.taskManager.addTask(() => {\n\t\t\tthis.gameInput.disableInput();\n\t\t});\n\t\tthis.taskManager.addTask(() => {\n\t\t\tlet sourceId = this.board.getElementWithXY(oldCoord.x, oldCoord.y).id;\n\t\t\tlet targetId = this.board.getElementWithXY(newCoord.x, newCoord.y).id;\n\t\t\tlet isValid = this.board.swap(oldCoord.x, oldCoord.y, newCoord.x, newCoord.y);\n\t\t\tlet isNear = this.board.isNear(oldCoord.x, oldCoord.y, newCoord.x, newCoord.y);\n\t\t\tif(isValid){\n\t\t\t\tthis._validSwap(sourceId, targetId);\n\t\t\t\tthis._checkMatched();\n\t\t\t}\n\t\t\telse if(!isValid && isNear){\n\t\t\t\tthis._invalidSwap(sourceId, targetId);\n\t\t\t}\n\t\t\telse {\n\t\t\t\t// to solve a problem that when player swipes his mouse through a corner of a gem,\n\t\t\t\t// which will make left mouse button remain disable state.\n\t\t\t\tthis.taskManager.addTask(() => {\n\t\t\t\t\tthis.gameInput.enableInput();\n\t\t\t\t});\n\t\t\t}\n\t\t});\n\t}\n\n\t_validSwap(sourceId, targetId){\n\t\tthis.taskManager.addTask(() => {\n\t\t\tthis.animationManager.spriteSwap(sourceId, targetId);\n\t\t});\n\t}\n\n\t_invalidSwap(sourceId, targetId){\n\t\t// swap twice to play swap back and forth animation.\n\t\tthis.taskManager.addTask(() => {\n\t\t\tthis.animationManager.spriteSwap(sourceId, targetId);\n\t\t});\n\t\tthis.taskManager.addTask(() => {\n\t\t\tthis.animationManager.spriteSwap(sourceId, targetId);\n\t\t});\n\t\tthis.taskManager.addTask(() => {\n\t\t\tthis.gameInput.enableInput();\n\t\t});\n\t}\n\n\t_checkMatched(){\n\t\tthis.taskManager.addTask(() => {\n\t\t\tlet matchedResults = this.board.findMatchedAll();\n\t\t\tlet hasPossibleMatch = this.board.findPossibleMatch();\n\t\t\tif(matchedResults.length > 0){\n\t\t\t\tthis._clearMatchedGems(matchedResults);\n\t\t\t\tthis._makeGemsFall();\n\t\t\t\tthis._addGems();\n\t\t\t\tthis.taskManager.addTask(() => { this._checkMatched(); });\n\t\t\t}\n\t\t\telse if(hasPossibleMatch.length > 0){\n\t\t\t\tthis.taskManager.addTask(() => { this.gameInput.enableInput(); });\n\t\t\t}\n\t\t\telse {\n\t\t\t\tthis._renewBoardAnimations();\n\t\t\t\tthis._newBoard();\n\t\t\t}\n\t\t});\n\t}\n\n\t_clearMatchedGems(matchedResults){\n\t\tthis.taskManager.addTask(() => {\n\t\t\tmatchedResults.forEach((ele) => {\n\t\t\t\tthis.animationManager.spriteFadeOut(ele.element.id, 250);\n\t\t\t});\n\t\t});\n\t\t// clear model data after animation ends.\n\t\tthis.taskManager.addTask(() => {\n\t\t\tthis.board.clearMatched(matchedResults);\n\t\t});\n\t\t// clear sprites\n\t\tthis.taskManager.addTask(() => {\n\t\t\tmatchedResults.forEach((ele) => {\n\t\t\t\tthis.animationManager.removeSprite(ele.element.id);\n\t\t\t});\n\t\t});\n\t\tthis.taskManager.addTask(() => {\n\t\t\tthis.soundMatch.play();\n\t\t});\n\t}\n\n\t_makeGemsFall(){\n\t\tlet results;\n\t\tthis.taskManager.addTask(() => {\n\t\t\tresults = this.board.triggerGravity();\n\t\t});\n\t\tthis.taskManager.addTask(() => {\n\t\t\tresults.forEach((ele) => {\n\t\t\t\tlet destY = ele.toY * GameConstants.TILE_SIZE;\n\t\t\t\tthis.animationManager.spriteFallTo(destY, ele.element.id, 225);\n\t\t\t});\n\t\t});\n\t\tthis.taskManager.addTask(() => {\n\t\t\tthis.soundFall.play();\n\t\t});\n\t}\n\n\t_addGems(){\n\t\tlet results;\n\t\tthis.taskManager.addTask(() => {\n\t\t\tresults = this.board.fillEmpty();\n\t\t});\n\t\tthis.taskManager.addTask(() => {\n\t\t\tresults.forEach((ele) => {\n\t\t\t\tthis._createGem(ele.x, ele.y, ele.element.type, ele.element.id);\n\t\t\t});\n\t\t});\n\t\tthis.taskManager.addTask(() => {\n\t\t\tthis.soundFall.play();\n\t\t});\n\t}\n\n\t_renewBoardAnimations(){\n\t\t// add \"no more movement\" text.\n\t\tthis.taskManager.addTask(() => {\n\t\t\tthis.animationManager.addTextSprite(this.game.world.centerX, this.game.world.centerY, \"renew_board\", \"No\\nMore\\nMove\");\n\t\t\tthis.animationManager.spriteFallFrom(-100, \"renew_board\", 100);\n\t\t});\n\t\t// fade out all sprites.\n\t\tthis.taskManager.addTask(() => {\n\t\t\tlet board = this.board.getBoard();\n\t\t\tfor(let y = 0; y < board.length; y++){\n\t\t\t\tfor(let x = 0; x < board[y].length; x++){\n\t\t\t\t\tthis.animationManager.spriteFadeOut(board[y][x].id, 2500);\n\t\t\t\t}\n\t\t\t}\n\t\t\tthis.animationManager.spriteFadeOut(\"renew_board\", 2500);\n\t\t});\n\t\t// remove all sprites\n\t\tthis.taskManager.addTask(() => {\n\t\t\tlet board = this.board.getBoard();\n\t\t\tfor(let y = 0; y < board.length; y++){\n\t\t\t\tfor(let x = 0; x < board[y].length; x++){\n\t\t\t\t\tthis.animationManager.removeSprite(board[y][x].id);\n\t\t\t\t}\n\t\t\t}\n\t\t\tthis.animationManager.removeSprite(\"renew_board\");\n\t\t});\n\t}\n\n\t_newBoard(){\n\t\t// generate board and make gems fall\n\t\tthis.taskManager.addTask(() => {\n\t\t\t// this.board.newBoardWithSample(sampleBoard2);\n\t\t\tthis.board.newBoard(8,8);\n\t\t\tlet board = this.board.getBoard();\n\t\t\tfor(let y = 0; y < board.length; y++){\n\t\t\t\tfor(let x = 0; x < board[y].length; x++){\n\t\t\t\t\tthis._createGem(x, y, board[y][x].type, board[y][x].id);\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\t\t// after the previous one is done, allow mouse input.\n\t\tthis.taskManager.addTask(() => {\n\t\t\tthis.gameInput.enableInput();\n\t\t});\n\t\tthis.taskManager.addTask(() => {\n\t\t\tthis.soundFall.play();\n\t\t});\n\t}\n\n\t_createGem(x, y, type, id){\n\t\tlet startX = x * GameConstants.TILE_SIZE;\n\t\tlet startY = (y - GameConstants.BOARD_HEIGHT) * GameConstants.TILE_SIZE;\n\t\tlet destX = startX;\n\t\tlet destY = y * GameConstants.TILE_SIZE;\n\t\tlet spriteName = \"gem\" + type;\n\t\tthis.animationManager.addSprite(destX, destY, spriteName, id);\n\t\tthis.animationManager.spriteFallFrom(startY, id, 225);\n\t}\n}\n","let GameUtils = {\n\tconvertToBoardPosition: function(x, y, tileSize){\n\t\treturn {\n\t\t\tx: Math.floor(x / tileSize),\n\t\t\ty: Math.floor(y / tileSize)\n\t\t};\n\t},\n\n\tconvertToViewPosition: function(x, y, tileSize){\n\t\treturn {\n\t\t\tx: x * tileSize,\n\t\t\ty: y * tileSize\n\t\t};\n\t},\n};\n\nexport {GameUtils as default}\n","import Pattern from \"./m3g/Pattern\";\nimport Matrix from \"./m3g/Matrix\";\nimport BoardUtils from \"./m3g/BoardUtils\";\nimport BoardPatterns from \"./m3g/BoardPatterns\";\nimport Board from \"./m3g/Board\";\n\nimport GameUtils from \"./GameUtils\";\nimport GameInput from \"./GameInput\";\nimport GameScene from \"./GameScene\";\n\nimport TaskManager from \"./TaskManager\";\nimport AnimationManager from \"./AnimationManager\";\n\nimport Boot from \"./Boot\";\n\nexport {\n\tPattern,\n\tMatrix,\n\tBoardUtils,\n\tBoardPatterns,\n\tBoard,\n\n\tGameUtils,\n\tGameInput,\n\tGameScene,\n\n\tTaskManager,\n\tAnimationManager,\n\n\tBoot\n};\n","export default class TaskManager{\n\tconstructor(){\n\t\tthis._tasks = [];\n\t}\n\n\taddTask(task){\n\t\tthis._tasks.push(task);\n\t}\n\n\trunTasks(){\n\t\tlet taskArray = this._tasks.splice(0,1);\n\t\tif(taskArray.length > 0){ taskArray[0](); }\n\t}\n}\n","import BoardUtils from \"./BoardUtils\";\nimport Matrix from \"./Matrix\";\n\nexport default class Board {\n\tconstructor(){\n\t\tthis._idCounter = 0;\n\t\tthis._board = null;\n\t}\n\n\tnewBoard(width, height){\n\t\tthis.resetIdCounter();\n\t\tthis._board = BoardUtils.createBoard(width, height,\n\t\t\tthis._generatorFunction.bind(this),\n\t\t\tthis._compareFunction,\n\t\t\tthis._isDuplicateFunction,\n\t\t\tthis.resetIdCounter.bind(this));\n\t}\n\n\tnewBoardWithSample(sampleBoard){\n\t\tthis.resetIdCounter();\n\t\tlet board = [];\n\t\tfor(let y = 0, row = []; y < sampleBoard.length; y++, row = []){\n\t\t\tfor(let x = 0; x < sampleBoard[y].length; x++){\n\t\t\t\trow.push({type: sampleBoard[y][x], id: this._idCounter++});\n\t\t\t}\n\t\t\tboard.push(row);\n\t\t}\n\t\tthis._board = board;\n\t}\n\n\tfindMatchedAll(){\n\t\treturn BoardUtils.findMatchedAll(this._board, this._compareFunction, this._isDuplicateFunction);\n\t}\n\n\ttestSwap(sourceX, sourceY, targetX, targetY){\n\t\treturn BoardUtils.testSwap(this._board, sourceX, sourceY, targetX, targetY, this._compareFunction, this._isDuplicateFunction);\n\t}\n\n\tisNear(sourceX, sourceY, targetX, targetY){\n\t\treturn BoardUtils.isNear(sourceX, sourceY, targetX, targetY);\n\t}\n\n\tswap(sourceX, sourceY, targetX, targetY){\n\t\treturn BoardUtils.swap(this._board, sourceX, sourceY, targetX, targetY, this._compareFunction, this._isDuplicateFunction);\n\t}\n\n\tfindPossibleMatch(){\n\t\treturn BoardUtils.findPossibleMatch(this._board, this._compareFunction, this._isDuplicateFunction);\n\t}\n\n\tclearMatched(matchedResult){\n\t\treturn BoardUtils.clearMatched(this._board, matchedResult, this._toEmptyFunction);\n\t}\n\n\ttriggerGravity(){\n\t\treturn BoardUtils.triggerGravity(this._board, this._isEmptyFunction);\n\t}\n\n\tfillEmpty(){\n\t\treturn BoardUtils.fillEmpty(this._board, this._isEmptyFunction, this._generatorFunction.bind(this));\n\t}\n\n\tdebugPrint(matchedResult, printWhat){\n\t\tBoardUtils.debugPrint(this._board, matchedResult, printWhat);\n\t}\n\n\tgetBoard(){ return this._board; }\n\tgetIdCounter(){ return this.idCounter; }\n\n\tgetElementWithXY(x, y){\n\t\tif(!Matrix.isInBound(this.getBoard(), x, y)){ return null; }\n\t\tlet board = this.getBoard();\n\t\treturn board[y][x];\n\t}\n\n\tgetElementWithId(id){\n\t\tlet board = this.getBoard();\n\t\tfor(let y = 0; y < board.length; y++){\n\t\t\tfor(let x = 0; x < board[y].length; x++){\n\t\t\t\tif(board[y][x].id === id){\n\t\t\t\t\treturn {\n\t\t\t\t\t\tx: x,\n\t\t\t\t\t\ty: y,\n\t\t\t\t\t\telement: board[y][x]\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn null;\n\t}\n\n\t_generatorFunction(){\n\t\tlet index = Math.floor(Math.random() * Board.TYPES.length);\n\t\treturn {\n\t\t\ttype: Board.TYPES[index],\n\t\t\tid: this._idCounter++\n\t\t};\n\t}\n\n\t_compareFunction(ele1, ele2){\n\t\treturn ele1.type === ele2.type;\n\t}\n\n\t_isDuplicateFunction(ele1, ele2){\n\t\treturn (ele1.type === ele2.type && ele1.id === ele2.id);\n\t}\n\n\t_toEmptyFunction(ele){\n\t\treturn {type: Board.EMPTY, id: -1};\n\t}\n\n\t_isEmptyFunction(ele){\n\t\treturn ele.type === Board.EMPTY;\n\t}\n\n\tresetIdCounter(){\n\t\tthis._idCounter = 0;\n\t}\n\n\tstatic PRINT_TYPE(ele){ return ele.type; }\n\tstatic PRINT_ID(ele){ return ele.id; }\n\tstatic get TYPES(){ return [1,2,3,4,5,6,7,8]; }\n\tstatic get EMPTY(){ return 0; }\n}\n","import Matrix from \"./Matrix\";\n\nlet horizontalPattern1 = [\n\t[1,1,0],\n\t[0,0,1]\n];\nlet horizontalPattern2 = [\n\t[1,0,0],\n\t[0,1,1]\n];\nlet horizontalPattern3 = [\n\t[1,0,1],\n\t[0,1,0]\n];\nlet horizontalPattern4 = [\n\t[1,1,0,1]\n];\nlet horizontalPattern5 = [\n\t[1,0,1,1]\n];\nlet verticalPattern1 = Matrix.transpose(horizontalPattern1);\nlet verticalPattern2 = Matrix.transpose(horizontalPattern2);\nlet verticalPattern3 = Matrix.transpose(horizontalPattern3);\nlet verticalPattern4 = Matrix.transpose(horizontalPattern4);\nlet verticalPattern5 = Matrix.transpose(horizontalPattern5);\n\nlet BoardPatterns = [\n\t{pattern: horizontalPattern1, anchorX: 0, anchorY: 0},\n\t{pattern: horizontalPattern1, anchorX: 0, anchorY: 1},\n\t{pattern: horizontalPattern2, anchorX: 0, anchorY: 0},\n\t{pattern: horizontalPattern2, anchorX: 0, anchorY: 1},\n\t{pattern: horizontalPattern3, anchorX: 0, anchorY: 0},\n\t{pattern: horizontalPattern3, anchorX: 0, anchorY: 1},\n\t{pattern: horizontalPattern4, anchorX: 0, anchorY: 0},\n\t{pattern: horizontalPattern5, anchorX: 0, anchorY: 0},\n\t{pattern: verticalPattern1, anchorX: 0, anchorY: 0},\n\t{pattern: verticalPattern1, anchorX: 1, anchorY: 0},\n\t{pattern: verticalPattern2, anchorX: 0, anchorY: 0},\n\t{pattern: verticalPattern2, anchorX: 1, anchorY: 0},\n\t{pattern: verticalPattern3, anchorX: 0, anchorY: 0},\n\t{pattern: verticalPattern3, anchorX: 1, anchorY: 0},\n\t{pattern: verticalPattern4, anchorX: 0, anchorY: 0},\n\t{pattern: verticalPattern5, anchorX: 0, anchorY: 0},\n];\n\nexport {BoardPatterns as default};\n","import Matrix from \"./Matrix\";\nimport Pattern from \"./Pattern\";\nimport BoardPatterns from \"./BoardPatterns\";\n\nlet BoardUtils = {\n\t/**\n\t\tfind same element with a given point on board.\n\t\t@arg {array} board - 2d array.\n\t\t@arg {number} startX - startX.\n\t\t@arg {number} startY - startY.\n\t\t@arg {function} compareFunction - used for comparing between two elements. Will pass two parameters: ele1 and ele2.\n\t\t@arg {function} isDuplicateFunction - used for comparing between two elements. Will pass two parameters: ele1 and ele2.\n\t\t@return {object} - will return a list of matched elements, like following example: (will return an empty array if not found)\n\t\t\t[\n\t\t\t\t{x: 1, y: 3, element: ele},\n\t\t\t\t{x: x, y: y, element: ele},\n\t\t\t\t...\n\t\t\t]\n\t*/\n\tfindMatched: function(board, startX, startY, compareFunction, isDuplicateFunction){\n\t\tlet targetElement = board[startY][startX];\n\t\tlet rightList = [];\n\t\tlet downList = [];\n\t\tlet resultList = [];\n\n\t\twalkDirection(board, startX, startY, targetElement, \"right\", rightList);\n\t\twalkDirection(board, startX, startY, targetElement, \"down\", downList);\n\n\t\tresultList = (rightList.length >= 3) ? resultList.concat(rightList) : resultList;\n\t\tresultList = (downList.length >= 3) ? resultList.concat(downList) : resultList;\n\n\t\treturn BoardUtils._removeMatchedDuplicates(resultList, isDuplicateFunction);\n\n\t\tfunction walkDirection(board, x, y, targetElement, direction, matchedList){\n\t\t\tif(!isValidDirection(board, x, y, targetElement)){ return; }\n\t\t\tmatchedList.push({x: x, y: y, element: board[y][x]});\n\t\t\tswitch(direction){\n\t\t\t\tcase \"right\": walkDirection(board, x + 1, y, targetElement, \"right\", matchedList); break;\n\t\t\t\tcase \"down\": walkDirection(board, x, y + 1, targetElement, \"down\", matchedList); break;\n\t\t\t}\n\t\t}\n\n\t\tfunction isValidDirection(board, x, y, targetElement){\n\t\t\treturn (Matrix.isInBound(board, x, y) && compareFunction(targetElement, board[y][x]));\n\t\t}\n\t},\n\n\t/**\n\t\tfind same element with a given board.\n\t\t@arg {array} board - 2d array.\n\t\t@arg {function} compareFunction - used for comparing between two elements. Will pass two parameters: ele1 and ele2.\n\t\t@arg {function} isDuplicateFunction - used for comparing between two elements. Will pass two parameters: ele1 and ele2.\n\t\t@return {object} - will return a list of matched elements, like following example: (will return an empty array if not found)\n\t\t\t[\n\t\t\t\t{x: 1, y: 3, element: ele},\n\t\t\t\t{x: x, y: y, element: ele},\n\t\t\t\t...\n\t\t\t]\n\t*/\n\tfindMatchedAll: function(board, compareFunction, isDuplicateFunction){\n\t\tlet resultList = [];\n\t\tfor(let y = 0; y < board.length; y++){\n\t\t\tfor(let x = 0; x < board[y].length; x++){\n\t\t\t\tlet result = BoardUtils.findMatched(board, x, y, compareFunction, isDuplicateFunction);\n\t\t\t\tresultList = resultList.concat(result);\n\t\t\t}\n\t\t}\n\t\treturn BoardUtils._removeMatchedDuplicates(resultList, isDuplicateFunction);\n\t},\n\n\t/**\n\t\ttest if it's a successful swap with given points. Won't modify the original board.\n\t\t@arg {array} board - 2d array.\n\t\t@arg {number} sourceX - sourceX.\n\t\t@arg {number} sourceY - sourceY.\n\t\t@arg {number} targetX - targetX.\n\t\t@arg {number} targetY - targetY.\n\t\t@arg {function} compareFunction - used for comparing between two elements. Will pass two parameters: ele1 and ele2.\n\t\t@arg {function} isDuplicateFunction - used for comparing between two elements. Will pass two parameters: ele1 and ele2.\n\t\t@return {array, boolean} - will return an list of matched elements. Only returns array with 3+ elements on success or false on failure.\n\t*/\n\ttestSwap: function(board, sourceX, sourceY, targetX, targetY, compareFunction, isDuplicateFunction){\n\t\tif(!(Matrix.isInBound(board, sourceX, sourceY) && Matrix.isInBound(board, targetX, targetY))){ return false; }\n\t\tif(!BoardUtils.isNear(sourceX, sourceY, targetX, targetY)){ return false; }\n\t\tlet cloneBoard = Matrix.clone(board);\n\t\tMatrix.swap(cloneBoard, sourceX, sourceY, targetX, targetY);\n\t\tlet result = BoardUtils.findMatchedAll(cloneBoard, compareFunction, isDuplicateFunction);\n\t\treturn result.length >= 3 ? result : false;\n\t},\n\n\t/**\n\t\tTest if target point is only near center point's up, down, left, right. Center point is based on sourceX and sourceY.\n\t\t@arg {number} sourceX - sourceX.\n\t\t@arg {number} sourceY - sourceY.\n\t\t@arg {number} targetX - targetX.\n\t\t@arg {number} targetY - targetY.\n\t\t@return {boolean} - true if it fulfills the requirements, false on not.\n\t*/\n\tisNear: function(sourceX, sourceY, targetX, targetY){\n\t\tlet diffX = Math.abs(targetX - sourceX);\n\t\tlet diffY = Math.abs(targetY - sourceY);\n\t\treturn (diffX + diffY === 1) ? true : false;\n\t},\n\n\t/**\n\t\tAlmost identical to testSwap, except it will modify original board on success.\n\t*/\n\tswap: function(board, sourceX, sourceY, targetX, targetY, compareFunction, isDuplicateFunction){\n\t\tlet result = BoardUtils.testSwap(board, sourceX, sourceY, targetX, targetY, compareFunction, isDuplicateFunction);\n\t\tif(result){ Matrix.swap(board, sourceX, sourceY, targetX, targetY); }\n\t\treturn result;\n\t},\n\n\t/**\n\t\tFind all possible match on a board.\n\t\t@arg {array} board - 2d array.\n\t\t@arg {function} compareFunction - used for comparing between two elements. Will pass two parameters: ele1 and ele2.\n\t\t@arg {function} isDuplicateFunction - used for comparing between two elements. Will pass two parameters: ele1 and ele2.\n\t\t@return {array} - will return a list of matched elements. Returns an empty array if no matched elements was found.\n\t*/\n\tfindPossibleMatch: function(board, compareFunction, isDuplicateFunction){\n\t\tlet resultList = [];\n\t\tfor(let y = 0; y < board.length; y++){\n\t\t\tfor(let x = 0; x < board[y].length; x++){\n\t\t\t\tfor(let i = 0; i < BoardPatterns.length; i++){\n\t\t\t\t\tlet result = Pattern.comparePattern(board, x, y, BoardPatterns[i].pattern, BoardPatterns[i].anchorX, BoardPatterns[i].anchorY, compareFunction);\n\t\t\t\t\tif(result){ resultList = resultList.concat(result); }\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tresultList = BoardUtils._removeMatchedDuplicates(resultList, isDuplicateFunction);\n\t\treturn resultList;\n\t},\n\n\t/**\n\t\tClear all matched elements with matchResult.\n\t\t@arg {array} board - 2d array.\n\t\t@arg {array} matchResult - can be obtained by invoking findMatchedAll.\n\t\t@arg {function} toEmptyFunction - what are you gonna do when an element is set to empty. Has 1 parameter with ele.\n\t\t@return {array} - will return an array with removed elements. Formation is same to findMatched's result.\n\t*/\n\tclearMatched: function(board, matchResult, toEmptyFunction){\n\t\tlet removedList = [];\n\t\tmatchResult.forEach((ele) => {\n\t\t\tremovedList.push({x: ele.x, y: ele.y, element: board[ele.y][ele.x]});\n\t\t\tboard[ele.y][ele.x] = toEmptyFunction(ele);\n\t\t});\n\t\treturn removedList;\n\t},\n\n\t/**\n\t\tMake element fall when there are empty elements stay in the given board.\n\t\t@arg {array} board - 2d array.\n\t\t@arg {function} isEmptyFunction - tell this function what does empty look like in the given board. Has 1 parameter with board[y][x].\n\t\t@return {array} - will return an array with elements affected by gravity. Formation looks like following:\n\t\t\t[\n\t\t\t\t{fromX: 2, fromY: 0, toX: 2, toY: 5, element: 6},\n\t\t\t\t{fromX: 3, fromY: 5, toX: 3, toY: 7, element: 2},\n\t\t\t\t...\n\t\t\t]\n\t*/\n\ttriggerGravity: function(board, isEmptyFunction){\n\t\tlet resultList = [];\n\t\tfor(let x = 0; x < board[0].length; x++){\n\t\t\tfor(let y = board[x].length - 1; y >= 0; y--){\n\t\t\t\tif(isEmptyFunction(board[y][x])){\n\t\t\t\t\tfor(let y2 = y - 1; y2 >= 0; y2--){\n\t\t\t\t\t\tif(!isEmptyFunction(board[y2][x])){\n\t\t\t\t\t\t\tresultList.push({fromX: x, fromY: y2, toX: x, toY: y, element: board[y2][x]});\n\t\t\t\t\t\t\tMatrix.swap(board, x, y, x, y2);\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn resultList;\n\t},\n\n\t/**\n\t\tFill empty elements with randomly picked element.\n\t\t@arg {array} board - 2d array.\n\t\t@arg {function} isEmptyFunction - tell this function what does empty look like in the given board. Has 1 parameter with board[y][x].\n\t\t@arg {function} generatorFunction - let user decide how new elements were made.\n\t\t@return {array} - will return an array with elements used for filling the empty.\n\t*/\n\tfillEmpty: function(board, isEmptyFunction, generatorFunction){\n\t\tlet resultList = [];\n\t\tfor(let y = 0; y < board.length; y++){\n\t\t\tfor(let x = 0; x < board[y].length; x++){\n\t\t\t\tif(isEmptyFunction(board[y][x])){\n\t\t\t\t\tboard[y][x] = generatorFunction();\n\t\t\t\t\tresultList.push({x: x, y: y, element: board[y][x]});\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn resultList;\n\t},\n\n\t/**\n\t\tCreate an new board.\n\t\t@arg {number} width - board width.\n\t\t@arg {number} height - board height.\n\t\t@arg {function} generatorFunction - let user decide how new elements were made.\n\t\t@arg {function} compareFunction - used for comparing between two elements. Will pass two parameters: ele1 and ele2.\n\t\t@arg {function} isDuplicateFunction - used for comparing between two elements. Will pass two parameters: ele1 and ele2.\n\t\t@arg {function} onAgain - will be exeucted when not successfully create.\n\t\t@return {2d-array} - give you an new board.\n\t*/\n\tcreateBoard: function(width, height, generatorFunction, compareFunction, isDuplicateFunction, onAgain){\n\t\tlet board, matchedList, possibleMatchedList;\n\t\tdo{\n\t\t\tif(onAgain){ onAgain(); }\n\t\t\tboard = Matrix.create(width, height, generatorFunction);\n\t\t\tmatchedList = BoardUtils.findMatchedAll(board, compareFunction, isDuplicateFunction);\n\t\t\tpossibleMatchedList = BoardUtils.findPossibleMatch(board, compareFunction, isDuplicateFunction);\n\t\t}while(matchedList.length > 0 || possibleMatchedList.length < 3);\n\t\treturn board;\n\t},\n\n\t/**\n\t\t@arg {2d-array} board - board.\n\t\t@arg {arry} matchedResult - get one from findMatched or findMatchedAll.\n\t\t@arg {function} valueFunction - decide what user want to output. Will pass in an element.\n\t*/\n\tdebugPrint: function(board, matchedResult, valueFunction){\n\t\tlet boardOutput = \"\";\n\t\tlet matchedOutput = \"\";\n\t\tfor(let y = 0; y < board.length; y++){\n\t\t\tfor(let x = 0; x < board[y].length; x++){\n\t\t\t\tboardOutput += valueFunction(board[y][x]) + \", \";\n\t\t\t\tif(matchedResult){\n\t\t\t\t\tlet index;\n\t\t\t\t\tfor(let i = 0; i < matchedResult.length; i++){\n\t\t\t\t\t\tif(x === matchedResult[i].x && y === matchedResult[i].y){\n\t\t\t\t\t\t\tindex = i;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tmatchedOutput += (index >= 0) ? (valueFunction(matchedResult[index].element) + \", \") : (\" \" + \", \");\n\t\t\t\t}\n\t\t\t}\n\t\t\tboardOutput += \"\\n\";\n\t\t\tmatchedOutput += \"\\n\";\n\t\t}\n\n\t\tconsole.log(\"board:\");\n\t\tconsole.log(boardOutput);\n\t\tif(matchedResult){\n\t\t\tconsole.log(\"matched:\");\n\t\t\tconsole.log(matchedOutput);\n\t\t}\n\t},\n\n\t_removeMatchedDuplicates: function(list, isDuplicateFunction){\n\t\tlet resultList = [];\n\t\tfor(let i = 0; i < list.length; i++){\n\t\t\tlet hasOne = false;\n\t\t\tresultList.forEach((ele) => {\n\t\t\t\tif(list[i].x === ele.x && list[i].y === ele.y && isDuplicateFunction(list[i].element, ele.element)){\n\t\t\t\t\thasOne = true;\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t});\n\t\t\tif(!hasOne){ resultList.push(list[i]); }\n\t\t}\n\t\treturn resultList;\n\t},\n};\n\nexport {BoardUtils as default};\n","let Matrix = {\n\ttranspose: function(matrix){\n\t\tlet height = matrix.length;\n\t\tlet width = matrix[0].length;\n\t\tlet newArray = [];\n\t\tlet newMatrix = [];\n\n\t\t// to one-dimensional first\n\t\tfor(let i = 0; i < height; i++){\n\t\t\tnewArray = newArray.concat(matrix[i]);\n\t\t}\n\n\t\t/*\n\t\t\tif origin size:\t\twidth = 2, height = 3\n\t\t\tnew one will be:\twidth = 3, height = 2\n\t\t*/\n\t\tfor(let i = 0; i < width; i++){\n\t\t\tlet row = [];\n\t\t\tlet indexToNewArray = i;\n\t\t\twhile(newArray[indexToNewArray] !== undefined){\n\t\t\t\trow.push(newArray[indexToNewArray]);\n\t\t\t\tindexToNewArray += width;\n\t\t\t}\n\t\t\tif(row.length > 0){ newMatrix.push(row); };\n\t\t}\n\n\t\treturn newMatrix;\n\t},\n\n\tisInBound: function(matrix, x, y){\n\t\tlet height = matrix.length;\n\t\tlet width = matrix[0].length;\n\t\treturn ((x >= 0 && x < width) && (y >= 0 && y < height)) ? true : false;\n\t},\n\n\tswap: function(matrix, sourceX, sourceY, targetX, targetY){\n\t\tlet temp = matrix[targetY][targetX];\n\t\tmatrix[targetY][targetX] = matrix[sourceY][sourceX];\n\t\tmatrix[sourceY][sourceX] = temp;\n\t\treturn {\n\t\t\tsource: {x: sourceX, y: sourceY, type: matrix[sourceY][sourceX]},\n\t\t\ttarget: {x: targetX, y: targetY, type: matrix[targetY][targetX]}\n\t\t}\n\t},\n\n\t/**\n\t\t@arg {number} width\t\t- Width.\n\t\t@arg {number} height\t- Height.\n\t\t@arg {function} generatorFunction - let user decide how new elements were made.\n\t*/\n\tcreate: function(width, height, generatorFunction){\n\t\tlet matrix = [];\n\t\tfor(let y = 0, row = []; y < height; y++, row = []){\n\t\t\tfor(let x = 0; x < width; x++){\n\t\t\t\trow.push(generatorFunction());\n\t\t\t}\n\t\t\tmatrix.push(row);\n\t\t};\n\t\treturn matrix;\n\t},\n\n\tclone: function(matrix){\n\t\tlet clone = [];\n\t\tmatrix.forEach((ele) => {\n\t\t\tclone.push(ele.slice(0));\n\t\t});\n\t\treturn clone;\n\t},\n};\n\nexport {Matrix as default};\n","import Matrix from \"./Matrix\";\n\nlet Pattern = {\n\tmakePattern: function(pattern, anchorX, anchorY){\n\t\tif(!(Matrix.isInBound(pattern, anchorX, anchorY))){ throw new Error(`Anchor is out of bound! ${anchorX}, ${anchorY}`); }\n\t\tlet diff = [];\n\t\tlet targetElement = pattern[anchorY][anchorX];\n\t\tlet counter = 0;\n\t\tfor(let y = 0; y < pattern.length; y++){\n\t\t\tfor(let x = 0; x < pattern[y].length; x++){\n\t\t\t\tif(pattern[y][x] === targetElement){\n\t\t\t\t\tlet diffX = x - anchorX;\n\t\t\t\t\tlet diffY = y - anchorY;\n\t\t\t\t\tdiff.push({x: diffX, y: diffY});\n\t\t\t\t\tcounter++;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn {diff: diff, counter: counter};\n\t},\n\n\tcomparePattern: function(matrix, x, y, pattern, anchorX, anchorY, compareFunction){\n\t\tlet patternResult = Pattern.makePattern(pattern, anchorX, anchorY);\n\t\tlet result = [];\n\t\tlet targetElement = matrix[y][x];\n\t\tlet counter = 0;\n\t\tfor(let i = 0; i < patternResult.diff.length; i++){\n\t\t\tlet newX = x + patternResult.diff[i].x;\n\t\t\tlet newY = y + patternResult.diff[i].y;\n\t\t\tif(Matrix.isInBound(matrix, newX, newY)){\n\t\t\t\tif(compareFunction(targetElement, matrix[newY][newX])){\n\t\t\t\t\tcounter++;\n\t\t\t\t\tresult.push({x: newX, y: newY, element: matrix[newY][newX]});\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn counter === patternResult.counter ? result : null;\n\t},\n};\n\nexport {Pattern as default};\n"]}