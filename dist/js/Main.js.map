{"version":3,"sources":["node_modules/browser-pack/_prelude.js","src/js/Main.js","src/js/m3g/BoardUtils.js","src/js/m3g/Matrix.js","src/js/m3g/Pattern.js"],"names":[],"mappings":"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","file":"Main.js","sourceRoot":"/source/","sourcesContent":["(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})","import BoardUtils from \"./m3g/BoardUtils\";\nimport Pattern from \"./m3g/Pattern\";\nimport Matrix from \"./m3g/Matrix\";\n\nexport {\n\tBoardUtils,\n\tPattern,\n\tMatrix\n};\n","import Matrix from \"./Matrix\";\nimport Pattern from \"./Pattern\";\n\nlet BoardUtils = {\n\tfindMatched: function(board, startX, startY){\n\t\tlet targetType = board[startY][startX];\n\t\tlet rightList = [];\n\t\tlet downList = [];\n\t\tlet resultList = [];\n\n\t\twalkDirection(board, startX, startY, targetType, \"right\", rightList);\n\t\twalkDirection(board, startX, startY, targetType, \"down\", downList);\n\n\t\tresultList = (rightList.length >= 3) ? resultList.concat(rightList) : resultList;\n\t\tresultList = (downList.length >= 3) ? resultList.concat(downList) : resultList;\n\n\t\treturn BoardUtils._removeMatchedDuplicates(resultList);\n\n\t\tfunction walkDirection(board, x, y, type, direction, matchedList){\n\t\t\tif(!isValidDirection(board, x, y, type)){ return; }\n\t\t\tmatchedList.push({x: x, y: y, type: type});\n\t\t\tswitch(direction){\n\t\t\t\tcase \"right\": walkDirection(board, x + 1, y, type, \"right\", matchedList); break;\n\t\t\t\tcase \"down\": walkDirection(board, x, y + 1, type, \"down\", matchedList); break;\n\t\t\t}\n\t\t}\n\n\t\tfunction isValidDirection(board, x, y, type){\n\t\t\treturn Matrix.isInBound(board, x, y) && board[y][x] === type;\n\t\t}\n\t},\n\n\tfindMatchedAll: function(board){\n\t\tlet resultList = [];\n\t\tfor(let y = 0; y < board.length; y++){\n\t\t\tfor(let x = 0; x < board[y].length; x++){\n\t\t\t\tlet result = BoardUtils.findMatched(board, x, y);\n\t\t\t\tresultList = resultList.concat(result);\n\t\t\t}\n\t\t}\n\t\treturn BoardUtils._removeMatchedDuplicates(resultList);\n\t},\n\n\ttestSwap: function(board, sourceX, sourceY, targetX, targetY){\n\t\tif(!(Matrix.isInBound(board, sourceX, sourceY) && Matrix.isInBound(board, targetX, targetY))){ return false; }\n\t\tlet cloneBoard = BoardUtils.cloneBoard(board);\n\t\tBoardUtils._swapHelpper(cloneBoard, sourceX, sourceY, targetX, targetY);\n\t\tlet result = BoardUtils.findMatchedAll(cloneBoard);\n\t\treturn result.length >= 3 ? result : false;\n\t},\n\n\tswap: function(board, sourceX, sourceY, targetX, targetY){\n\t\tlet result = BoardUtils.testSwap(board, sourceX, sourceY, targetX, targetY);\n\t\tif(result){ BoardUtils._swapHelpper(board, sourceX, sourceY, targetX, targetY); }\n\t\treturn result;\n\t},\n\n\thasPossibleMatch: function(board){\n\t\tlet patterns = BoardUtils._generatePatterns();\n\t\tlet resultList = [];\n\n\t\tfor(let y = 0; y < board.length; y++){\n\t\t\tfor(let x = 0; x < board[y].length; x++){\n\t\t\t\tfor(let i = 0; i < patterns.length; i++){\n\t\t\t\t\tlet result = Pattern.comparePattern(board, x, y, patterns[i].pattern, patterns[i].anchorX, patterns[i].anchorY);\n\t\t\t\t\tif(result){ resultList = resultList.concat(result); }\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tresultList = BoardUtils._removeMatchedDuplicates(resultList);\n\t\treturn resultList;\n\t},\n\n\t/**\n\t\t@arg {array} board - 2d array.\n\t\t@arg {boolean} onlySize - only copy its height and width, false on default.\n\t*/\n\tcloneBoard: function(board, onlySize = false){\n\t\tlet clone = [];\n\n\t\tif(onlySize){\n\t\t\tfor(let y = 0; y < board.length; y++){\n\t\t\t\tclone.push([]);\n\t\t\t\tfor(let x = 0; x < board[y].length; x++){\n\t\t\t\t\tclone[y][x] = BoardUtils.UNVISITED;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\telse{\n\t\t\tboard.forEach((ele) => {\n\t\t\t\tclone.push(ele.slice(0));\n\t\t\t});\n\t\t}\n\t\treturn clone;\n\t},\n\n\tdebugPrint: function(board, matchedResult){\n\t\tlet boardOutput = \"\";\n\t\tlet matchedOutput = \"\";\n\t\tfor(let y = 0; y < board.length; y++){\n\t\t\tfor(let x = 0; x < board[y].length; x++){\n\t\t\t\tboardOutput += board[y][x] + \", \";\n\n\t\t\t\tlet index = matchedResult.findIndex((ele, index, arr) => {\n\t\t\t\t\tif(x === ele.x && y === ele.y){\n\t\t\t\t\t\treturn true;\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t\tmatchedOutput += (index >= 0) ? (matchedResult[index].type + \", \") : (\" \" + \", \");\n\t\t\t}\n\t\t\tboardOutput += \"\\n\";\n\t\t\tmatchedOutput += \"\\n\";\n\t\t}\n\n\t\tconsole.log(\"board:\");\n\t\tconsole.log(boardOutput);\n\t\tconsole.log(\"matched:\");\n\t\tconsole.log(matchedOutput);\n\t},\n\n\t_removeMatchedDuplicates: function(list){\n\t\tlet resultList = [];\n\t\tfor(let i = 0; i < list.length; i++){\n\t\t\tlet hasOne = resultList.find((ele) => {\n\t\t\t\tif(list[i].x === ele.x && list[i].y === ele.y && list[i].type === ele.type){\n\t\t\t\t\treturn true;\n\t\t\t\t}\n\t\t\t});\n\t\t\tif(!hasOne){ resultList.push(list[i]); }\n\t\t}\n\t\treturn resultList;\n\t},\n\n\t_swapHelpper: function(board, sourceX, sourceY, targetX, targetY){\n\t\tlet temp = board[targetY][targetX];\n\t\tboard[targetY][targetX] = board[sourceY][sourceX];\n\t\tboard[sourceY][sourceX] = temp;\n\t\treturn {\n\t\t\tsource: {x: sourceX, y: sourceY, type: board[sourceY][sourceX]},\n\t\t\ttarget: {x: targetX, y: targetY, type: board[targetY][targetX]}\n\t\t}\n\t},\n\n\t_generatePatterns: function(){\n\t\tlet horizontalPattern1 = [\n\t\t\t[1,1,0],\n\t\t\t[0,0,1]\n\t\t];\n\t\tlet horizontalPattern2 = [\n\t\t\t[1,0,0],\n\t\t\t[0,1,1]\n\t\t];\n\t\tlet horizontalPattern3 = [\n\t\t\t[1,0,1],\n\t\t\t[0,1,0]\n\t\t];\n\t\tlet verticalPattern1 = Matrix.transpose(horizontalPattern1);\n\t\tlet verticalPattern2 = Matrix.transpose(horizontalPattern2);\n\t\tlet verticalPattern3 = Matrix.transpose(horizontalPattern3);\n\n\t\treturn [\n\t\t\t{pattern: horizontalPattern1, anchorX: 0, anchorY: 0},\n\t\t\t{pattern: horizontalPattern1, anchorX: 0, anchorY: 1},\n\t\t\t{pattern: horizontalPattern2, anchorX: 0, anchorY: 0},\n\t\t\t{pattern: horizontalPattern2, anchorX: 0, anchorY: 1},\n\t\t\t{pattern: horizontalPattern3, anchorX: 0, anchorY: 0},\n\t\t\t{pattern: horizontalPattern3, anchorX: 0, anchorY: 1},\n\t\t\t{pattern: verticalPattern1, anchorX: 0, anchorY: 0},\n\t\t\t{pattern: verticalPattern1, anchorX: 1, anchorY: 0},\n\t\t\t{pattern: verticalPattern2, anchorX: 0, anchorY: 0},\n\t\t\t{pattern: verticalPattern2, anchorX: 1, anchorY: 0},\n\t\t\t{pattern: verticalPattern3, anchorX: 0, anchorY: 0},\n\t\t\t{pattern: verticalPattern3, anchorX: 1, anchorY: 0},\n\t\t];\n\t},\n\n\tVISITED: 2,\n\tUNVISITED: 1,\n};\n\nexport {BoardUtils as default};\n","let Matrix = {\n\ttranspose: function(matrix){\n\t\tlet height = matrix.length;\n\t\tlet width = matrix[0].length;\n\t\tlet newArray = [];\n\t\tlet newMatrix = [];\n\n\t\t// to one-dimensional first\n\t\tfor(let i = 0; i < height; i++){\n\t\t\tnewArray = newArray.concat(matrix[i]);\n\t\t}\n\n\t\t/*\n\t\t\tif origin size:\t\twidth = 2, height = 3\n\t\t\tnew one will be:\twidth = 3, height = 2\n\t\t*/\n\t\tfor(let i = 0; i < width; i++){\n\t\t\tlet row = [];\n\t\t\tlet indexToNewArray = i;\n\t\t\twhile(newArray[indexToNewArray] !== undefined){\n\t\t\t\trow.push(newArray[indexToNewArray]);\n\t\t\t\tindexToNewArray += width;\n\t\t\t}\n\t\t\tif(row.length > 0){ newMatrix.push(row); };\n\t\t}\n\n\t\treturn newMatrix;\n\t},\n\n\tisInBound: function(matrix, x, y){\n\t\tlet height = matrix.length;\n\t\tlet width = matrix[0].length;\n\t\treturn ((x >= 0 && x < width) && (y >= 0 && y < height)) ? true : false;\n\t},\n};\n\nexport {Matrix as default};\n","import Matrix from \"./Matrix\";\n\nlet Pattern = {\n\tmakePattern: function(pattern, anchorX, anchorY){\n\t\tif(!(Matrix.isInBound(pattern, anchorX, anchorY))){ throw new Error(`Anchor is out of bound! ${anchorX}, ${anchorY}`); }\n\t\tlet diff = [];\n\t\tlet targetType = pattern[anchorY][anchorX];\n\t\tlet counter = 0;\n\t\tfor(let y = 0; y < pattern.length; y++){\n\t\t\tfor(let x = 0; x < pattern[y].length; x++){\n\t\t\t\tif(pattern[y][x] === targetType){\n\t\t\t\t\tlet diffX = x - anchorX;\n\t\t\t\t\tlet diffY = y - anchorY;\n\t\t\t\t\tdiff.push({x: diffX, y: diffY});\n\t\t\t\t\tcounter++;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn {diff: diff, counter: counter};\n\t},\n\n\tcomparePattern: function(board, x, y, pattern, anchorX, anchorY){\n\t\tlet patternResult = Pattern.makePattern(pattern, anchorX, anchorY);\n\t\tlet result = [];\n\t\tlet targetType = board[y][x];\n\t\tlet counter = 0;\n\t\tfor(let i = 0; i < patternResult.diff.length; i++){\n\t\t\tlet newX = x + patternResult.diff[i].x;\n\t\t\tlet newY = y + patternResult.diff[i].y;\n\t\t\tif(Matrix.isInBound(board, newX, newY)){\n\t\t\t\tif(board[newY][newX] === targetType){\n\t\t\t\t\tcounter++;\n\t\t\t\t\tresult.push({x: newX, y: newY, type: board[newY][newX]});\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn counter === patternResult.counter ? result : null;\n\t},\n};\n\nexport {Pattern as default};\n"]}